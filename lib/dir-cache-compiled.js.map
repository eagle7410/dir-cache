{"version":3,"sources":["dir-cache.js"],"names":[],"mappings":"AAAA;;;;AAIA;;AAEA;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,YAAR,EAAsB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAAtB,CAAZ;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA;;AAEA,IAAI,UAAU,QAAQ,GAAR,CAAY,UAAZ,KAA2B,KAAzC;AACA,IAAI,eAAe,QAAQ,GAAR,CAAY,gBAAZ,GAA+B,IAA/B,GAAsC,KAAzD;AACA,IAAI,MAAM;AACT,MAAO,CAAD,IAAO,MAAM,IAAN,CAAW,IADf;AAET,OAAQ,CAAD,IAAO,MAAM,IAAN,CAAW,IAFhB;AAGT,QAAS,CAAD,IAAO,MAAM,IAAN,CAAW,IAHjB;AAIT,OAAU,CAAD,IAAO,QAAQ,GAAR,CAAY,YAAY,CAAxB;AAJP,CAAV;;AAOA;;AAEA,IAAI,OAAJ,EAAa;;AAEZ,OAAM;AACL,OAAO,CAAD,IAAO,QAAQ,GAAR,CAAY,WAAW,CAAvB,CADR;AAEL,QAAQ,CAAD,IAAO,QAAQ,GAAR,CAAY,YAAY,CAAxB,CAFT;AAGL,SAAS,CAAD,IAAO,QAAQ,GAAR,CAAY,WAAW,CAAvB,CAHV;AAIL,QAAS,CAAD,IAAO,QAAQ,GAAR,CAAY,YAAY,CAAxB;AAJV,EAAN;;AAOA,KAAI,YAAJ,EAAkB;AACjB,MAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,QAAM,IAAI,QAAQ,MAAZ,CAAmB;AACxB,eAAY,CACX,IAAI,QAAQ,UAAR,CAAmB,OAAvB,CAA+B;AAC9B,WAAO,OADuB;AAE9B,sBAAkB,IAFY;AAG9B,UAAM,KAHwB;AAI9B,cAAU;AAJoB,IAA/B,CADW,CADY;AASxB,gBAAa;AATW,GAAnB,CAAN;;AAYA,MAAI,GAAJ,GAAU,IAAI,KAAd;AACA;AAED;;AAED,MAAM,KAAN,CAAY;AACX,eAAe;AACd,OAAK,MAAL,GAAc,aAAd;AACA;;AAED,OAAO,IAAP,EAAa;AACZ,MAAI,OAAO,IAAX;AACA,MAAI,IAAI,KAAK,WAAL,CAAiB,IAAzB;AACA,MAAI,IAAI,KAAK,MAAb;AACA,SAAO;AACN,SAAQ,UAAQ,KAAK,MAAO,MAAG,CAAE,OAAI,IAAK,GADpC;AAEN,WAAS,CAFH;AAGN,UAAQ;AAHF,GAAP;AAKA;;AAED,KAAK,IAAL,EAAW;AACV,MAAI,QAAQ,KAAK,KAAL,CAAW,IAAX,CAAZ;;AAEA,OAAK,IAAL,GAAY,MAAM,IAAlB;;AAEA,SAAO;AACN,YAAU,MAAM,IADV;AAEN,WAAS,MAAM,MAFT;AAGN,UAAQ,MAAM,KAHR;AAIN,SAAO;AAJD,GAAP;AAOA;;AAED,MAAM,IAAN,EAAY,IAAZ,EAAkB;AACjB,SAAO,QAAQ,IAAf;AACA,MAAI,IAAJ,CAAS,KAAK,KAAL,CAAW,IAAX,EAAiB,IAA1B;AACA;AAjCU;;AAoCZ,MAAM,IAAN,SAAoB,KAApB,CAA0B;AACzB,aAAa,OAAb,EAAsB,EAAtB,EAA0B;;AAEzB;;AAEA,MAAI,OAAO,IAAX;AACA,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,GAAL,GAAW,EAAX;;AAEA,OAAK,KAAL,CAAW,OAAX;;AAEA;;AAEA,OAAK,MAAM,IAAN,CAAW,IAAX,CAAgB,EAAhB,CAAL;;AAEA,MAAI,CAAC,KAAK,IAAL,CAAU,MAAf,EAAuB;AACtB,UAAO,GAAG,KAAK,GAAL,CAAS,eAAT,CAAH,CAAP;AACA;;AAED,MAAI,IAAJ,CAAU,4CAA0C,KAAK,IAAK,IAA9D;;AAEA,QAAM,GAAN,CAAU,KAAK,IAAf,EAAqB,CAAC,GAAD,EAAM,MAAN,KAAiB;;AAErC,OAAI,IAAJ,CAAU,YAAU,GAAI,GAAxB;;AAEA,SAAM,KAAK,OAAL,CAAa,GAAb,CAAN;;AAEA,OAAI,IAAJ,CAAU,gBAAc,GAAI,GAA5B;;AAEA,MAAG,MAAH,CAAU,GAAV,EAAgB,KAAD,IAAW,OAAO,QAAQ,IAAR,GAAe,KAAK,GAAL,CAAU,IAAE,GAAI,aAAhB,CAAtB,CAA1B;AAEA,GAVD,EAUI,CAAD,IAAO;AACT,MAAG,CAAH,EAAM,IAAN;AACA,GAZD;AAaA;AACD;AACA,OAAO,OAAP,EAAgB;;AAEf,MAAI,OAAO,IAAX;AACA;;AAEA,YAAU,KAAK,WAAL,CAAiB,OAAjB,CAAV;;AAEA,YAAU,WAAW,EAArB;AACA,UAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,EAA/B;AACA,UAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,EAA/B;;AAEA,QAAM,GAAN,CAAU,GAAV,CAAc,OAAd,EAAuB,CAAC,CAAD,EAAI,CAAJ,KAAU;;AAEhC,OAAK,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,CAAyB,CAAzB,CAAN,EAAmC;AAClC,QAAI,MAAM,GAAN,CAAU,MAAV,CAAiB,MAAM,OAAN,CAAc,CAAd,IAAmB,CAAnB,GAAuB,CAAC,CAAD,CAAxC,CAAJ;AACA;;AAED,QAAK,CAAL,IAAU,CAAV;AAEA,GARD;;AAUA,OAAK,UAAL,CAAgB,OAAhB;AACA;AACD,aAAa,OAAb,EAAsB;AACrB,SAAO,OAAP;AACA;AACD,YAAY,OAAZ,EAAqB;AACpB;AACA;AACD,WAAW,IAAX,EAAiB,MAAjB,EAA2B;AAC1B,SAAO,SAAS,SAAS,GAAT,GAAe,IAAxB,GAA+B,IAAtC;AACA;AACD;AACA,cAAc,IAAd,EAAoB;AACnB,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,IAAL,CAAU,MAA9B,EAAsC,GAAtC,EACC,IAAK,CAAC,KAAK,OAAL,CAAc,KAAK,IAAL,CAAU,CAAV,CAAd,CAAN,EACC,OAAO,IAAP;;AAEF,SAAO,KAAP;AACA;AACD,SAAS;AACR,SAAO,KAAK,IAAL,CAAU,MAAV,KAAqB,CAA5B;AACA;AACD,WAAY,GAAZ,EAAiB,MAAjB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC;;AAElC,MAAI,OAAO,IAAX;;AAEA,OAAK,MAAL,GAAc,WAAd;;AAEA,MAAI,CAAC,GAAL,EAAU;AACT,SAAM;AACL,WAAQ,EADH;AAEL,SAAM;AAFD,IAAN;AAIA,QAAK,GAAL,CAAS,IAAT,CAAc,GAAd;AACA;;AAED,MAAI,IAAJ,CAAU,aAAW,GAAI,GAAzB;;AAEA,KAAG,OAAH,CAAW,GAAX,EAAgB,CAAC,CAAD,EAAI,MAAJ,KAAe;;AAE9B,OAAI,CAAJ,EAAO;AACN,WAAO,OAAO,CAAP,CAAP;AACA;;AAED,OAAI,SAAS,EAAb;;AAEA,UAAO,MAAP,CAAe,IAAD,IAAW;;AAExB,QAAI,KAAK,YAAL,CAAkB,IAAlB,CAAJ,EACC,OAAO,IAAP;;AAED;;AAEA,QAAI;AACH,SAAI,QAAQ,MAAM,GAAN,GAAY,IAAxB;AACA,SAAI,QAAQ,GAAG,SAAH,CAAa,KAAb,CAAZ;;AAEA,SAAI,MAAM,WAAN,EAAJ,EAAyB;AACxB,aAAO,IAAP,CAAY,IAAZ;AACA,aAAO,KAAP;AACA;AAED,KATD,CASE,OAAO,CAAP,EAAU;AACX,UAAK,IAAL,CAAW,kBAAgB,KAAM,MAAG,CAAE,GAAtC;AACA,YAAO,KAAP;AACA;;AAED,WAAO,KAAK,KAAL,EAAP;AAEA,IAvBD,EAuBI,GAvBJ,CAuBS,IAAD,IAAU;AAChB,QAAI,KAAJ,CAAU,IAAV,CAAe,KAAK,SAAL,CAAe,KAAK,QAAL,CAAc,MAAM,GAAN,GAAY,IAA1B,CAAf,EAAgD,GAAhD,CAAf;AAED,IA1BD;;AA4BA,OAAI,CAAC,OAAO,MAAZ,EAAoB;AACnB,WAAO,QAAP;AACA;;AAED,SAAM,GAAN,CAAU,MAAV,EAAkB,CAAC,MAAD,EAAS,SAAT,KAAuB,KAAK,SAAL,CAAe,MAAM,GAAN,GAAY,MAA3B,EAAmC,SAAnC,EAA8C,KAAK,SAAL,CAAe,MAAf,EAAuB,GAAvB,CAA9C,EAA2E,GAA3E,CAAzC,EAA0H,MAA1H;AAEA,GA1CD;AA4CA;;AAED,KAAK,EAAL,EAAS;AACR,MAAI,OAAM,IAAV;AACA,OAAK,MAAL,GAAc,KAAd;AACA,OAAK,MAAM,IAAN,CAAW,IAAX,CAAgB,EAAhB,CAAL;;AAEA,MAAI,KAAK,IAAT,EAAe;AACd,UAAO,GAAG,KAAK,GAAL,CAAS,KAAK,IAAd,CAAH,CAAP;AACA;;AAED,MAAI,IAAJ,CAAS,eAAT;;AAEA,QAAM,GAAN,CAAU,KAAK,IAAf,EAAqB,CAAC,GAAD,EAAM,GAAN,KAAc,KAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,CAAnC,EAA8D,CAAD,IAAO;AACnE,MAAG,CAAH,EAAM,IAAN;AACA,GAFD;AAGA;;AA3JwB;AA8J1B,MAAM,IAAN,SAAmB,IAAnB,CAAwB;;AAEvB,KAAK,EAAL,EAAS;AACR,MAAI,OAAK,IAAT;;AAEA,QAAM,GAAN,CAAU,CAAC,CAAD,EAAI,IAAJ,KAAa;;AAEtB,OAAI,CAAJ,EAAO;AACN,WAAO,GAAG,CAAH,CAAP;AACA;;AAED,SAAM,GAAN,CAAU,KAAK,GAAf,EAAoB,CAAC,IAAD,EAAO,OAAP,KAAmB;;AAEtC,QAAI,KAAK,KAAL,CAAW,MAAf,EAAuB;AACtB,YAAO,MAAM,GAAN,CAAU,KAAK,KAAf,EAAsB,CAAC,IAAD,EAAO,OAAP,KAAmB;AAC/C,WAAK,OAAL,CAAa,KAAK,GAAlB,EAAuB,IAAvB,EAA6B,OAA7B;AACA,MAFM,EAEJ,OAFI,CAAP;AAGA;AACD;AACA,IARD,EAQI,CAAD,IAAO,GAAG,CAAH,EAAM,IAAN,CARV;AASA,GAfD;AAgBA;AACD,SAAS,GAAT,EAAc,IAAd,EAAoB,OAApB,EAA6B;AAC5B,MAAI,OAAO,IAAX;AACA,MAAI,IAAI,KAAK,OAAL,CAAa,MAAM,GAAN,GAAY,IAAzB,CAAR;AACA,KAAG,QAAH,CAAY,CAAZ,EAAe,CAAC,CAAD,EAAI,IAAJ,KAAa;;AAE3B,OAAI,CAAJ,EAAO;AACN,SAAK,IAAL,CAAU,kBAAkB,CAA5B;AACA,YAAQ,GAAR,CAAY,CAAZ;AACA,WAAO,SAAP;AACA;;AAED,OAAI,IAAJ,CAAS,cAAc,CAAvB;;AAEA,QAAK,SAAL,CAAe,CAAf,EAAkB,GAAlB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,MAAM,SAAzC;AACA,GAXD;AAYA;AACD,WAAW,QAAX,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,EAAtC,EAA0C;AACzC,MAAI,OAAO,IAAX;AACA,OAAK,MAAL,GAAc,WAAd;AACA,OAAK,SAAL,CAAe,QAAf,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,CAAC,CAAD,EAAI,IAAJ,KAAa;;AAEtD,OAAI,CAAJ,EAAO;AACN,SAAK,IAAL,CAAW,mCAAiC,QAAS,GAArD;AACA,YAAQ,GAAR,CAAY,CAAZ;AACA;;AAED,SAAM,GAAN,CAAU,OAAV,CAAkB,KAAK,GAAvB,EAA4B,OAA5B;AACA,UAAO,KAAK,OAAL,CAAa,KAAK,OAAL,CAAa,IAAb,CAAb,EAAiC,EAAjC,CAAP;AACA,QAAK,GAAL,CAAS,KAAT,CAAe,IAAf,IAAuB,IAAvB;;AAEA;AACA,GAZD;AAaA;AACD,WAAW,QAAX,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,EAAtC,EAA0C;AACzC,SAAO,KAAK,QAAL,EAAP;;AAEA,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,KAAK,KAAL,CAAW,sCAAX,CAAX;AACA,OAAK,MAAL,GAAc,WAAd;;AAEA,MAAI,IAAJ,EAAU;;AAET,UAAO,MAAO,GAAP,CAAW,IAAX,EAAiB,CAAC,GAAD,EAAM,OAAN,KAAkB;;AAEzC,QAAI,UAAU,IAAI,KAAJ,CAAU,UAAV,CAAd;;AAEA,QAAI,CAAC,OAAL,EAAc;AACb,UAAK,IAAL,CAAW,4BAA0B,GAAI,GAAzC,EAA4C,IAA5C;AACA,YAAO,SAAP;AACA;;AAED,cAAU,QAAQ,MAAR,GAAiB,CAAjB,GAAqB,QAAQ,CAAR,CAArB,GAAkC,EAA5C;;AAEA,QAAI,cAAc,SAAS,OAAT,CAAiB,KAAK,QAAL,CAAc,IAAd,CAAjB,EAAsC,EAAtC,IAA4C,OAA9D;;AAEA,kBAAc,YAAY,QAAZ,EAAd;;AAEA,OAAG,QAAH,CAAY,WAAZ,EAA0B,CAAC,CAAD,EAAI,OAAJ,KAAgB;;AAEzC,SAAI,CAAJ,EAAO;AACN,WAAK,IAAL,CAAW,4BAA0B,WAAY,GAAjD,EAAoD,IAApD;AACA,aAAO,SAAP;AACA;;AAED,YAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,QAAQ,QAAR,EAAlB,CAAP;AACA;AACA,KATD;AAWA,IA1BM,EA0BH,CAAD,IAAO,GAAG,CAAH,EAAM,KAAK,YAAL,CAAkB,IAAlB,CAAN,CA1BH,CAAP;AA2BA;;AAED,KAAG,IAAH,EAAS,KAAK,YAAL,CAAkB,IAAlB,CAAT;AACA;AACD,cAAc,IAAd,EAAoB;AACnB,SAAO,KAAK,OAAL,CAAa,QAAb,EAAuB,IAAvB,CAAP;AACA;AAjGsB;AAmGxB,MAAM,MAAN,SAAsB,IAAtB,CAA2B;AAC1B,WAAW,QAAX,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,OAAtC,EAA+C;AAC9C,MAAI,OAAO,IAAX;AACA,MAAI,MAAM,KAAK,OAAL,CAAa,IAAb,CAAV;AACA,SAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;AACA,QAAM,IAAI,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAN;;AAEA,OAAK,GAAL,GAAW,MAAM,GAAN,CAAU,UAAV,CAAqB,KAAK,GAA1B,EAA+B,CAAC,OAAD,EAAU,GAAV,EAAe,GAAf,CAA/B,CAAX;AACA,OAAK,GAAL,CAAS,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,IAAgC,IAAhC;;AAEA;AACA;AAXyB;AAa3B,MAAM,OAAN,CAAc;AACd,QAAQ,IAAR,GAAe,CAAC,OAAD,EAAU,EAAV,KAAiB,IAAI,IAAJ,CAAU,OAAV,EAAmB,EAAnB,CAAhC;AACA,QAAQ,IAAR,GAAe,CAAC,OAAD,EAAU,EAAV,KAAiB,IAAI,IAAJ,CAAU,OAAV,EAAmB,EAAnB,CAAhC;AACA,QAAQ,IAAR,GAAe,CAAC,OAAD,EAAU,EAAV,KAAiB,IAAI,MAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAhC;AACA,QAAQ,QAAR,GAAmB,CAAC,OAAD,EAAU,EAAV,KAAiB,IAAI,OAAJ,CAAa,OAAb,EAAsB,EAAtB,CAApC","file":"dir-cache-compiled.js","sourcesContent":["/**\n * Created by igor on 03.10.16.\n */\n\n\"use strict\";\n\n// Modules && utils\n\nlet async = require('async');\nlet utils = require('utils-igor')(['obj', 'type', 'arr']);\nlet path = require('path');\nlet fs = require('fs');\n\n// Vars\n\nvar isDebug = process.env.NODE_DEBUG === 'dev';\nvar isDebugColor = process.env.NODE_DEBUG_COLOR ? true : false;\nlet log = {\n\terr : (m) => utils.type.noop,\n\tinfo : (m) => utils.type.noop,\n\terror : (m) => utils.type.noop,\n\twarn :   (m) => console.log('WARN : ' + m)\n};\n\n// Code\n\nif (isDebug) {\n\n\tlog = {\n\t\terr : (m) => console.log('ERR : ' + m),\n\t\tinfo : (m) => console.log('INFO : ' + m),\n\t\terror : (m) => console.log('ERR : ' + m),\n\t\twarn :  (m) => console.log('WARN : ' + m)\n\t};\n\n\tif (isDebugColor) {\n\t\tvar winston = require('winston');\n\n\t\tlog = new winston.Logger({\n\t\t\ttransports: [\n\t\t\t\tnew winston.transports.Console({\n\t\t\t\t\tlevel: 'debug',\n\t\t\t\t\thandleExceptions: true,\n\t\t\t\t\tjson: false,\n\t\t\t\t\tcolorize: true\n\t\t\t\t})\n\t\t\t],\n\t\t\texitOnError: false\n\t\t});\n\n\t\tlog.err = log.error;\n\t}\n\n}\n\nclass Frame {\n\tconstructor () {\n\t\tthis.active = 'constructor';\n\t}\n\n\t_mess (mess) {\n\t\tlet that = this;\n\t\tlet c = that.constructor.name;\n\t\tlet a = that.active;\n\t\treturn {\n\t\t\tmess : `Class ${this.active}/${a}: ${mess}`,\n\t\t\tactive : a,\n\t\t\tclass : c\n\t\t};\n\t}\n\n\terr (mess) {\n\t\tvar param = this._mess(mess);\n\n\t\tthis.stop = param.mess;\n\n\t\treturn {\n\t\t\tmessage : param.mess,\n\t\t\tmethod : param.active,\n\t\t\tclass : param.class,\n\t\t\ttype : 'ERROR'\n\t\t};\n\n\t}\n\n\twarn (mess, that) {\n\t\tthat = that || this;\n\t\tlog.warn(that._mess(mess).mess);\n\t}\n}\n\nclass Scan extends  Frame {\n\tconstructor (options, cb) {\n\n\t\tsuper();\n\n\t\tlet that = this;\n\t\tthat.stop = null;\n\t\tthat.res = [];\n\n\t\tthat.valid(options);\n\n\t\t// callback\n\n\t\tcb = utils.type.beFn(cb);\n\n\t\tif (!that.dirs.length) {\n\t\t\treturn cb(that.err('Dirs is empty'));\n\t\t}\n\n\t\tlog.info(`Be async call for check exists folders [${that.dirs}]`);\n\n\t\tasync.map(that.dirs, (dir, endDir) => {\n\n\t\t\tlog.info(`Process ${dir}`);\n\n\t\t\tdir = path.resolve(dir);\n\n\t\t\tlog.info(`Check exist ${dir}`);\n\n\t\t\tfs.exists(dir, (exist) => endDir(exist ? null : that.err(`${dir} no exists`)));\n\n\t\t}, (e) => {\n\t\t\tcb(e, that);\n\t\t});\n\t}\n\t// Valid & Exports to class\n\tvalid (options) {\n\n\t\tlet that = this;\n\t\t// check options\n\n\t\toptions = that.beforeValid(options);\n\n\t\toptions = options || {};\n\t\toptions.dirs = options.dirs || [];\n\t\toptions.exts = options.exts || [];\n\n\t\tutils.obj.for(options, (k, v) => {\n\n\t\t\tif ( ~['exts', 'dirs'].indexOf(k)) {\n\t\t\t\tv = utils.arr.unique(Array.isArray(v) ? v : [v]);\n\t\t\t}\n\n\t\t\tthat[k] = v;\n\n\t\t}) ;\n\n\t\tthat.afterValid(options);\n\t}\n\tbeforeValid (options) {\n\t\treturn options;\n\t}\n\tafterValid (options) {\n\t\treturn;\n\t}\n\t_filePath (main, attach)   {\n\t\treturn attach ? attach + '/' + main : main;\n\t}\n\t// check extension file\n\tisCorrectExt (file) {\n\t\tfor (let i = 0; i < this.exts.length; i++)\n\t\t\tif ( ~file.indexOf( this.exts[i] ))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\tisAll () {\n\t\treturn this.exts.length === 0\n\t}\n\t_dirFiles  (dir, endDir, add, res) {\n\n\t\tvar that = this;\n\n\t\tthat.active = '_dirFiles';\n\n\t\tif (!add) {\n\t\t\tres = {\n\t\t\t\tfiles : [],\n\t\t\t\tdir : dir\n\t\t\t};\n\t\t\tthat.res.push(res);\n\t\t}\n\n\t\tlog.info(`Scan dir ${dir}`);\n\n\t\tfs.readdir(dir, (e, arFile) => {\n\n\t\t\tif (e) {\n\t\t\t\treturn endDir(e);\n\t\t\t}\n\n\t\t\tlet folder = [];\n\n\t\t\tarFile.filter((file)  => {\n\n\t\t\t\tif (that.isCorrectExt(file))\n\t\t\t\t\treturn true;\n\n\t\t\t\t// check no folder folder\n\n\t\t\t\ttry {\n\t\t\t\t\tlet check = dir + '/' + file;\n\t\t\t\t\tlet stats = fs.lstatSync(check);\n\n\t\t\t\t\tif (stats.isDirectory()) {\n\t\t\t\t\t\tfolder.push(file);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthat.warn(`Bad stats for ${check} ${e}` );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn that.isAll();\n\n\t\t\t} ).map((file) => {\n\t\t\t\t\tres.files.push(that._filePath(path.basename(dir + '/' + file), add));\n\n\t\t\t});\n\n\t\t\tif (!folder.length) {\n\t\t\t\treturn endDir();\n\t\t\t}\n\n\t\t\tasync.map(folder, (folder, endFolder) => that._dirFiles(dir + '/' + folder, endFolder, that._filePath(folder, add), res), endDir);\n\n\t\t});\n\n\t}\n\n\trun (cb) {\n\t\tvar that =this;\n\t\tthat.active = 'run';\n\t\tcb = utils.type.beFn(cb);\n\n\t\tif (that.stop) {\n\t\t\treturn cb(that.err(that.stop));\n\t\t}\n\n\t\tlog.info('Run scan dirs');\n\n\t\tasync.map(that.dirs, (dir, end) => that._dirFiles(dir, end), (e) => {\n\t\t\tcb(e, this);\n\t\t});\n\t}\n\n}\nclass Swig extends Scan {\n\n\trun (cb) {\n\t\tvar that=this;\n\n\t\tsuper.run((e, scan) => {\n\n\t\t\tif (e) {\n\t\t\t\treturn cb(e);\n\t\t\t}\n\n\t\t\tasync.map(scan.res, (data, endData) => {\n\n\t\t\t\tif (data.files.length) {\n\t\t\t\t\treturn async.map(data.files, (file, endFile) => {\n\t\t\t\t\t\tthat.fileGet(data.dir, file, endFile);\n\t\t\t\t\t}, endData);\n\t\t\t\t}\n\t\t\t\tendData();\n\t\t\t}, (e) => cb(e, that));\n\t\t})\n\t}\n\tfileGet (dir, file, endFile) {\n\t\tlet that = this;\n\t\tlet p = path.resolve(dir + '/' + file);\n\t\tfs.readFile(p, (e, data) => {\n\n\t\t\tif (e) {\n\t\t\t\tthat.warn('No read file ' + p);\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn endFile();\n\t\t\t}\n\n\t\t\tlog.info('Read file' + p);\n\n\t\t\tthat.fileToRes(p, dir, file, data, () => endFile());\n\t\t});\n\t}\n\tfileToRes (pathFile, dir, file, data, cb) {\n\t\tlet that = this;\n\t\tthat.active = 'fileToRes';\n\t\tthat.dataToRes(pathFile, dir, file, data, (e, data) => {\n\n\t\t\tif (e) {\n\t\t\t\tthat.warn(`error not process data in file ${pathFile}`);\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\n\t\t\tutils.obj.beInObj(that.res, 'cache');\n\t\t\tfile = file.replace(path.extname(file), '');\n\t\t\tthat.res.cache[file] = data;\n\n\t\t\tcb();\n\t\t});\n\t}\n\tdataToRes (pathFile, dir, file, data, cb) {\n\t\tdata = data.toString();\n\n\t\tlet that = this;\n\t\tlet incs = data.match(/\\{\\%(.*)include(.*)\\'(.*)\\'(.*)\\%\\}/g);\n\t\tthat.active = 'fileToRes';\n\n\t\tif (incs) {\n\n\t\t\treturn async .map(incs, (inc, nextInc) => {\n\n\t\t\t\tlet incPath = inc.match(/\\'(.*)\\'/);\n\n\t\t\t\tif (!incPath) {\n\t\t\t\t\tthat.warn(`No find include path in ${inc}`, that);\n\t\t\t\t\treturn nextInc();\n\t\t\t\t}\n\n\t\t\t\tincPath = incPath.length > 1 ? incPath[1] : '';\n\n\t\t\t\tlet incPathFile = pathFile.replace(path.basename(file), '') + incPath;\n\n\t\t\t\tincPathFile = incPathFile.toString();\n\n\t\t\t\tfs.readFile(incPathFile , (e, incData) => {\n\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\tthat.warn(`No get file for include ${incPathFile}`, that);\n\t\t\t\t\t\treturn nextInc();\n\t\t\t\t\t}\n\n\t\t\t\t\tdata = data.replace(inc, incData.toString());\n\t\t\t\t\tnextInc();\n\t\t\t\t});\n\n\t\t\t}, (e) => cb(e, that.oneLineBreak(data)));\n\t\t}\n\n\t\tcb(null, that.oneLineBreak(data));\n\t}\n\toneLineBreak (data) {\n\t\treturn data.replace(/(\\n+)/g, \"\\n\");\n\t}\n}\nclass Reader extends  Swig {\n\tfileToRes (pathFile, dir, file, data, endFile) {\n\t\tlet that = this;\n\t\tlet ext = path.extname(file);\n\t\tfile = file.replace(ext, '');\n\t\text = ext.replace('.', '');\n\n\t\tthat.res = utils.obj.pathCreate(that.res, ['cache', ext, dir]);\n\t\tthat.res.cache[ext][dir][file] =data;\n\n\t\tendFile();\n\t}\n}\nclass Reuired {}\nexports.scan = (options, cb) => new Scan (options, cb);\nexports.swig = (options, cb) => new Swig (options, cb);\nexports.read = (options, cb) => new Reader (options, cb);\nexports.required = (options, cb) => new Reuired (options, cb);\n"]}