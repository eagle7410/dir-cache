{"version":3,"sources":["arr.js"],"names":[],"mappings":"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","file":"arr-compiled.js","sourcesContent":["/**\n * Created by igor on 30.05.16.\n */\n\n/**\n * By default the sort method sorts elements alphabetically.\n * To sort numerically just add a new method which handles numeric sorts\n * e.g. [11, 1, 2].sort(utils.sortNumber);\n * @param a\n * @param b\n * @returns {number}\n */\nexports.sortNumber = function (a, b) {\n\treturn parseFloat(a) - parseFloat(b);\n};\n\n\n/**\n *  Return share part of the array\n * @param arr1\n * @param arr2\n * @returns {Array}\n */\nmodule.exports.share = function (arr1, arr2) {\n\tvar r = [];\n\n\tif (!Array.isArray(arr1)) {\n\t\tarr1 = [];\n\t}\n\n\tif (!Array.isArray(arr2)) {\n\t\tarr2 = [];\n\t}\n\n\tr = arr1.filter(function (val) {\n\t\treturn arr2.indexOf(val) !== -1;\n\t});\n\n\treturn r;\n};\n\n/**\n * Return different part of the array\n * @param\t{Array} arr1\n * @param\t{Array} arr2\n * @return {Array}\n */\nexports.diff = function (arr1, arr2) {\n\tif (Array.isArray(arr1)) {\n\t\treturn arr1.filter(function (i) {\n\t\t\treturn arr2.indexOf(i) === -1;\n\t\t});\n\t} else {\n\t\treturn [];\n\t}\n};\n\n/**\n * Clear repeat values\n * @param {Array} arr\n */\nexports.unique = function (arr) {\n\treturn arr.filter(function (value, index, self) {\n\t\treturn self.indexOf(value) === index;\n\t});\n};\n\n/**\n * Delete all elements whith specified value\n * @param {Array} arr массив для очистки\n * @param {Mixed} value значение\n * @constructor\n */\nexports.mvVal = function (arr, value) {\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === value) {\n\t\t\tarr.splice(i, 1);\n\t\t\t--i;\n\t\t}\n\t}\n\n\treturn arr;\n};\n\n/**\n * Sum of array elements\n * @return {Number}\n */\nexports.sum = function (a) {\n\tvar r = 0;\n\n\tif (Array.isArray(a)) {\n\t\tr = a.reduce(function (pv, cv){\n\t\t\treturn (isNaN(pv) ? 0 : Number(pv))+(isNaN(cv) ? 0 : Number(cv))\n\t\t}, 0);\n\t}\n\n\treturn r;\n};\n\n/**\n * Return average elements array\n * @param a\n * @returns {number}\n */\nexports.avg = function (a) {\n\tvar r = 0\n\n\tif (!Array.isArray(a) || !a.length ) {\n\t\treturn r;\n\t}\n\n\treturn exports.sum(a) / a.length;\n}\n\n/**\n * Return array. When element is url collect from specified array\n * @param arr\n * @returns {Array}\n */\nexports.urls = function (arr) {\n\tvar r = [];\n\tarr = arr || [];\n\tarr = Array.isArray(arr) ? arr : [arr];\n\n\tfor (var i = 0, len = arr.length; i<len; ++i) {\n\t\tvar el = arr[i];\n\t\tif (!el) {\n\t\t\treturn;\n\t\t}\n\n\t\tel = el.trim().toLowerCase();\n\n\t\tif (el.indexOf('://') === -1) {\n\t\t\tel = 'http://' + el;\n\t\t}\n\n\t\tif (/^htt(p|ps)\\:\\/\\/(.*)+\\.(.*)+$/.test(el)) {\n\t\t\tr.push(el);\n\t\t}\n\t}\n\n\treturn r;\n};\n\n"]}